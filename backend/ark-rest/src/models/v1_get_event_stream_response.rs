/*
 * ark/v1/service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1GetEventStreamResponse {
    #[serde(rename = "roundFinalization", skip_serializing_if = "Option::is_none")]
    pub round_finalization: Option<Box<models::V1RoundFinalizationEvent>>,
    #[serde(rename = "roundFinalized", skip_serializing_if = "Option::is_none")]
    pub round_finalized: Option<Box<models::V1RoundFinalizedEvent>>,
    #[serde(rename = "roundFailed", skip_serializing_if = "Option::is_none")]
    pub round_failed: Option<Box<models::V1RoundFailed>>,
    #[serde(rename = "roundSigning", skip_serializing_if = "Option::is_none")]
    pub round_signing: Option<Box<models::V1RoundSigningEvent>>,
    #[serde(
        rename = "roundSigningNoncesGenerated",
        skip_serializing_if = "Option::is_none"
    )]
    pub round_signing_nonces_generated: Option<Box<models::V1RoundSigningNoncesGeneratedEvent>>,
}

impl V1GetEventStreamResponse {
    pub fn new() -> V1GetEventStreamResponse {
        V1GetEventStreamResponse {
            round_finalization: None,
            round_finalized: None,
            round_failed: None,
            round_signing: None,
            round_signing_nonces_generated: None,
        }
    }
}
