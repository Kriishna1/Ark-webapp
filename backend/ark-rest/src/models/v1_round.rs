/*
 * ark/v1/service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1Round {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<String>,
    #[serde(rename = "end", skip_serializing_if = "Option::is_none")]
    pub end: Option<String>,
    #[serde(rename = "roundTx", skip_serializing_if = "Option::is_none")]
    pub round_tx: Option<String>,
    #[serde(rename = "vtxoTree", skip_serializing_if = "Option::is_none")]
    pub vtxo_tree: Option<Box<models::V1Tree>>,
    #[serde(rename = "forfeitTxs", skip_serializing_if = "Option::is_none")]
    pub forfeit_txs: Option<Vec<String>>,
    #[serde(rename = "connectors", skip_serializing_if = "Option::is_none")]
    pub connectors: Option<Vec<String>>,
    #[serde(rename = "stage", skip_serializing_if = "Option::is_none")]
    pub stage: Option<models::V1RoundStage>,
}

impl V1Round {
    pub fn new() -> V1Round {
        V1Round {
            id: None,
            start: None,
            end: None,
            round_tx: None,
            vtxo_tree: None,
            forfeit_txs: None,
            connectors: None,
            stage: None,
        }
    }
}
