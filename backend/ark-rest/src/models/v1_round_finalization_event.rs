/*
 * ark/v1/service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1RoundFinalizationEvent {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "roundTx", skip_serializing_if = "Option::is_none")]
    pub round_tx: Option<String>,
    #[serde(rename = "vtxoTree", skip_serializing_if = "Option::is_none")]
    pub vtxo_tree: Option<Box<models::V1Tree>>,
    #[serde(rename = "connectors", skip_serializing_if = "Option::is_none")]
    pub connectors: Option<Vec<String>>,
    #[serde(rename = "minRelayFeeRate", skip_serializing_if = "Option::is_none")]
    pub min_relay_fee_rate: Option<String>,
}

impl V1RoundFinalizationEvent {
    pub fn new() -> V1RoundFinalizationEvent {
        V1RoundFinalizationEvent {
            id: None,
            round_tx: None,
            vtxo_tree: None,
            connectors: None,
            min_relay_fee_rate: None,
        }
    }
}
